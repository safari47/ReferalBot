from aiogram.utils.deep_linking import decode_payload
from config.config import bot
from aiogram.enums import ChatMemberStatus,ContentType
import asyncio
from keyboards.keyboards import main_kb
from aiogram.types import InlineKeyboardButton,InlineKeyboardMarkup
from loguru import logger

def payload(object):
    if object:
        return decode_payload(object)
    else:
        return None

async def is_user_subscribed(channel_url: str, telegram_id: int) -> bool:
    try:
        # –ü–æ–ª—É—á–∞–µ–º username –∫–∞–Ω–∞–ª–∞ –∏–∑ URL
        channel_username = channel_url.split('/')[-1]

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ –∫–∞–Ω–∞–ª–µ
        member = await bot.get_chat_member(chat_id=f"@{channel_username}", user_id=telegram_id)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if member.status in [ChatMemberStatus.MEMBER, ChatMemberStatus.CREATOR, ChatMemberStatus.ADMINISTRATOR]:
            return True
        else:
            return False
    except Exception as e:
        # –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –±–æ—Ç –Ω–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É)
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏: {e}")
        return False

async def is_channel_valid(url: str, bot) -> bool:
    try:
        if url.startswith("https://t.me/"):
            url = "@" + url.split("/")[-1]
        url = url.rstrip('/')
        chat = await bot.get_chat(url)
        return True
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–∞–Ω–∞–ª–∞: {e}")  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏
        return False
   

async def broadcast_send(users: list, message: dict, content_type: str, button: dict, url: dict, progress_message):
    good_send = 0
    bad_send = 0
    keyboard = None

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–∫–∏
    if not (button.text == 'üîú –ü–†–û–ü–£–°–¢–ò–¢–¨' or url.text == 'üîú –ü–†–û–ü–£–°–¢–ò–¢–¨'):
        keyboard = InlineKeyboardMarkup(
            inline_keyboard=[[InlineKeyboardButton(text=button.text, url=url.text)]]
        )

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    total_users = len(users)
    for index, user in enumerate(users, start=1):
        try:
            chat_id = user.get('telegram_id')

            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞
            if content_type == ContentType.TEXT:
                await bot.send_message(chat_id=chat_id, text=message.text, reply_markup=keyboard)
            
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ
            elif content_type == ContentType.PHOTO:
                await bot.send_photo(chat_id=chat_id, photo=message.photo[-1].file_id, caption=message.caption, reply_markup=keyboard)
            
            # –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
            elif content_type == ContentType.DOCUMENT:
                await bot.send_document(chat_id=chat_id, document=message.document.file_id, caption=message.caption, reply_markup=keyboard)
            
            # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–∏–¥–µ–æ
            elif content_type == ContentType.VIDEO:
                await bot.send_video(chat_id=chat_id, video=message.video.file_id, caption=message.caption, reply_markup=keyboard)

            # –û—Ç–ø—Ä–∞–≤–∫–∞ –∞—É–¥–∏–æ
            elif content_type == ContentType.AUDIO:
                await bot.send_audio(chat_id=chat_id, audio=message.audio.file_id, caption=message.caption, reply_markup=keyboard)
            
            # –û—Ç–ø—Ä–∞–≤–∫–∞ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            elif content_type == ContentType.VOICE:
                await bot.send_voice(chat_id=chat_id, voice=message.voice.file_id, caption=message.caption, reply_markup=keyboard)

            # –£—Å–ø–µ—à–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞
            good_send += 1
        except Exception as e:
            logger.info(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}: {e}")
            bad_send += 1
        finally:
            # –†–∞—Å—á—ë—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
            progress = int((index / total_users) * 100)
            await progress_message.edit_text(
                f"‚ûñ **–†–∞—Å—Å—ã–ª–∫–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ...** ‚ûñ\n\n"
                f"‚úÖ **–£—Å–ø–µ—à–Ω–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ:** <b>{good_send}</b>\n"
                f"‚ùå **–ù–µ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ:** <b>{bad_send}</b>\n\n"
                f"üì§ **–ü—Ä–æ–≥—Ä–µ—Å—Å:** <b>{progress}%</b>"
            )
            await asyncio.sleep(1)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–∞–º–∏

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Å–ø–µ—à–Ω–æ/–Ω–µ—É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    return good_send, bad_send